{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rasika\\\\Desktop\\\\swiggy\\\\src\\\\components\\\\Expenses\\\\Expense.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport '../UI/Card.css';\nimport Card from \"./Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expense = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const filterChangeHandler = selectYear => {\n    console.log(filteredYear);\n    setFilteredYear(selectYear);\n  };\n  const filteredExpense = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  //   props.items.map(ex => console.log(ex.itemName));\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"app-header\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), filteredExpense.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No expense found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 46\n    }, this) : filteredExpense.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      date: expense.date,\n      amount: expense.amount\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 105\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Expense, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expense;\nexport default Expense;\nvar _c;\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpenseFilter","Expense","props","filteredYear","setFilteredYear","filterChangeHandler","selectYear","console","log","filteredExpense","items","filter","expense","date","getFullYear","toString","length","map","title","amount","id"],"sources":["C:/Users/Rasika/Desktop/swiggy/src/components/Expenses/Expense.js"],"sourcesContent":["import React, { useState} from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport '../UI/Card.css'\r\nimport Card from \"./Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\n\r\nconst Expense = (props) =>{\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2020')\r\nconst filterChangeHandler = selectYear =>{\r\n    console.log(filteredYear);\r\n  setFilteredYear(selectYear)\r\n}\r\n\r\nconst filteredExpense = props.items.filter(expense =>{\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n});\r\n//   props.items.map(ex => console.log(ex.itemName));\r\n\r\n    return(\r\n        <Card className=\"app-header\">\r\n\r\n<ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\r\n        \r\n        {/* <ExpenseItem date={props.items[0].date} title={props.items[0].itemName} amount={props.items[0].amount}></ExpenseItem> */}\r\n    {/* reuse the components, pass data in ExpenseItem.js using some attributes(set properties using (props))  */}\r\n        {/* <ExpenseItem date={props.items[1].date} title={props.items[1].itemName} amount={props.items[1].amount}></ExpenseItem>\r\n        <ExpenseItem date={props.items[2].date} title={props.items[2].itemName} amount={props.items[2].amount}></ExpenseItem>\r\n        <ExpenseItem date={props.items[3].date} title={props.items[3].itemName} amount={props.items[3].amount}></ExpenseItem>\r\n         */}\r\n\r\n        {/* stop using hardcode  */}\r\n\r\n\r\n  \r\n        {/* {props.items.map((expense) => <ExpenseItem key = {expense.id} title= {expense.title} date= {expense.date} amount= {expense.amount}></ExpenseItem>)} */}\r\n       \r\n       {/* key is used to identify list of items in node */}\r\n       \r\n       \r\n             {/* filter by year use ternary operator or if-else */}\r\n         {/* {filteredExpense.map((expense) =><ExpenseItem key = {expense.id} title= {expense.title} date= {expense.date} amount= {expense.amount}></ExpenseItem>)} */}\r\n\r\n\r\n\r\n             {/* OR  */}\r\n             {filteredExpense.length === 0 ? <p>No expense found</p> : (filteredExpense.map((expense) =><ExpenseItem key = {expense.id} title= {expense.title} date= {expense.date} amount= {expense.amount}></ExpenseItem>))}\r\n\r\n             {/* OR  */}\r\n        </Card>\r\n    );\r\n}\r\nexport default Expense;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,MAAMC,OAAO,GAAIC,KAAK,IAAI;EAAA;EAEtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAC5D,MAAMQ,mBAAmB,GAAGC,UAAU,IAAG;IACrCC,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;IAC3BC,eAAe,CAACE,UAAU,CAAC;EAC7B,CAAC;EAED,MAAMG,eAAe,GAAGP,KAAK,CAACQ,KAAK,CAACC,MAAM,CAACC,OAAO,IAAG;IACjD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKZ,YAAY;EACjE,CAAC,CAAC;EACF;;EAEI,oBACI,QAAC,IAAI;IAAC,SAAS,EAAC,YAAY;IAAA,wBAEpC,QAAC,aAAa;MAAC,QAAQ,EAAEA,YAAa;MAAC,cAAc,EAAEE;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAE,EAwB/DI,eAAe,CAACO,MAAM,KAAK,CAAC,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,GAAIP,eAAe,CAACQ,GAAG,CAAEL,OAAO,iBAAI,QAAC,WAAW;MAAoB,KAAK,EAAGA,OAAO,CAACM,KAAM;MAAC,IAAI,EAAGN,OAAO,CAACC,IAAK;MAAC,MAAM,EAAGD,OAAO,CAACO;IAAO,GAAhFP,OAAO,CAACQ,EAAE;MAAA;MAAA;MAAA;IAAA,QAAqF,CAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAG9M;AAEf,CAAC;AAAA,GA7CKnB,OAAO;AAAA,KAAPA,OAAO;AA8Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}