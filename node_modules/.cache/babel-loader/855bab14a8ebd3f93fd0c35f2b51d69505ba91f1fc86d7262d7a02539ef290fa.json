{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rasika\\\\Desktop\\\\swiggy\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../UI/ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\n\n// pass parameters\n// function ExpenseItem(date, title, amount) {} OR\n// function ExpenseItem(data) {}\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseItem(props) {\n  _s();\n  //always we should have one root element()\n\n  //static data\n  // return (\n  //     <div className='expense-item'>\n  //         <div>Nov 4th 2022</div>\n  //         <div>\n  //             <h2>\n  //                 LG TV\n  //             </h2>\n  //         </div>\n  //         <div>\n  //             $21.22\n  //         </div>\n\n  //     </div>\n  // )\n\n  //dynamic data\n\n  // const date = new Date(2022, 10, 4); //month starts from 0\n  // const item = \"LG TV\";\n  // const amount = 291.120;\n\n  // for good dates \n  // const month = props.date.toLocaleString('en-Us', {month:'long'});\n  // const day = props.date.toLocaleString('en-Us', {day:'2-digit'});\n  // const year = props.date.getFullYear();\n\n  //[variable1, changedValFuction] = useState(initial value of the variable1) to save the data when events occurs\n\n  const [title, setTitle] = useState(props.title);\n  const clickHandler = () => {\n    setTitle('updated!');\n    console.log(title);\n    console.log(props.title);\n  };\n  // console.log(title)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"$\", props.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: clickHandler,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n}\n_s(ExpenseItem, \"ceUz0wjPP/oTY3+evv2xH5hljW4=\");\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["React","useState","ExpenseDate","ExpenseItem","props","title","setTitle","clickHandler","console","log","date","amount"],"sources":["C:/Users/Rasika/Desktop/swiggy/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../UI/ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\n\r\n// pass parameters\r\n// function ExpenseItem(date, title, amount) {} OR\r\n// function ExpenseItem(data) {}\r\nfunction ExpenseItem(props) {\r\n    //always we should have one root element()\r\n\r\n\r\n    //static data\r\n    // return (\r\n    //     <div className='expense-item'>\r\n    //         <div>Nov 4th 2022</div>\r\n    //         <div>\r\n    //             <h2>\r\n    //                 LG TV\r\n    //             </h2>\r\n    //         </div>\r\n    //         <div>\r\n    //             $21.22\r\n    //         </div>\r\n\r\n    //     </div>\r\n    // )\r\n\r\n\r\n\r\n    //dynamic data\r\n\r\n    // const date = new Date(2022, 10, 4); //month starts from 0\r\n    // const item = \"LG TV\";\r\n    // const amount = 291.120;\r\n\r\n    // for good dates \r\n    // const month = props.date.toLocaleString('en-Us', {month:'long'});\r\n    // const day = props.date.toLocaleString('en-Us', {day:'2-digit'});\r\n    // const year = props.date.getFullYear();\r\n\r\n    //[variable1, changedValFuction] = useState(initial value of the variable1) to save the data when events occurs\r\n\r\n    const [title, setTitle] = useState(props.title)\r\n\r\n    const clickHandler = () =>{\r\n       setTitle('updated!');\r\n       console.log(title)\r\n       console.log(props.title)\r\n    }\r\n    // console.log(title)\r\n\r\n    return (\r\n        \r\n            <div className='expense-item'>\r\n                {/* <div>{props.date.toISOString()}</div>*/}\r\n                {/* date we should use toISOString() method else it will not work */}\r\n\r\n                {/* OR for understanging the dates use toLocaleString() method */}\r\n{/*                \r\n                <div>\r\n                {month} / {day} / {year}\r\n                </div>  */}\r\n\r\n                {/* OR use nested components  */}\r\n                <ExpenseDate date = {props.date}/>\r\n                <div>\r\n                        {/* use the name for which the value is assigned used in App.js while calling function  */}\r\n                        {title}  \r\n                    \r\n                </div>\r\n                <div>\r\n                    ${props.amount}\r\n                </div>\r\n                <div onClick={clickHandler}>\r\n                    Change Title\r\n                </div>\r\n    \r\n            </div>\r\n           \r\n        )\r\n}\r\n\r\nexport default ExpenseItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,WAAW,MAAM,eAAe;;AAGvC;AACA;AACA;AAAA;AACA,SAASC,WAAW,CAACC,KAAK,EAAE;EAAA;EACxB;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAIA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAACC,KAAK,CAAC;EAE/C,MAAME,YAAY,GAAG,MAAK;IACvBD,QAAQ,CAAC,UAAU,CAAC;IACpBE,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClBG,OAAO,CAACC,GAAG,CAACL,KAAK,CAACC,KAAK,CAAC;EAC3B,CAAC;EACD;;EAEA,oBAEQ;IAAK,SAAS,EAAC,cAAc;IAAA,wBAWzB,QAAC,WAAW;MAAC,IAAI,EAAID,KAAK,CAACM;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eAClC;MAAA,UAESL;IAAK;MAAA;MAAA;MAAA;IAAA,QAER,eACN;MAAA,gBACMD,KAAK,CAACO,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ,eACN;MAAK,OAAO,EAAEJ,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAErB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAGlB;AAAC,GAzEQJ,WAAW;AAAA,KAAXA,WAAW;AA2EpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}